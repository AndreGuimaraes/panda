# Your instance's address
ec2_instance_address = "ec2-xxx....amazonaws.com"

# You must set this to be the your key assigned to your EC2 instance when it was started
ec2_ssh_key = File.join(ENV['HOME'], '.ssh', 'your-ec2-key')

# If you are deploying your own fork of Panda you will need to edit the git repo
set :repository,  "git://github.com/newbamboo/panda.git"
set :branch, "dm"

# There shouldn't be any need to edit anything below
# ==================================================

set :application, "panda"
set :scm, :git
set :scm_verbose, false
set :repository_cache, "git_master"
set :deploy_via, :remote_cache
set :ssh_options, { :forward_agent => true, :keys => [ec2_ssh_key] }
set :user, "panda"
set :use_sudo, false

role :app, ec2_instance_address
role :web, ec2_instance_address
role :db,  ec2_instance_address, :primary => true
set :deploy_to, "/var/www/panda"


task :copy_config_files_to_server do
  put File.read("config/database.yml.ec2"), "#{shared_path}/system/database.yml", :mode => 0644
  
  ['panda_init.rb', 'mailer.rb'].each do |f|
    put File.read("config/#{f}"), "#{shared_path}/system/#{f}", :mode => 0644
  end
end

after "deploy:symlink", "deploy:setup_symlinks"

# Phusion Passenger does auto restart when the symlink changes
namespace :deploy do
  task :restart do; end
  task :start do; end
  task :stop do; end
  
  task :setup_symlinks do
    # Symlink video store dir to /mnt so we make use of the space there
    run "ln -nsf /mnt/panda/tmp #{current_path}/tmp"
    # Symlink config files
    ['database.yml', 'panda_init.rb', 'mailer.rb'].each do |f|
      run "ln -nsf #{shared_path}/system/#{f} #{current_path}/config/#{f}"
    end
  end
  
  task :migrate, :roles => :db, :only => { :primary => true } do
    rake = fetch(:rake, "rake")
    merb_env = fetch(:merb_env, "production")
    migrate_env = fetch(:migrate_env, "")
    migrate_target = fetch(:migrate_target, :latest)
 
    directory = case migrate_target.to_sym
      when :current then current_path
      when :latest then current_release
      else raise ArgumentError, "unknown migration target #{migrate_target.inspect}"
      end
 
    run "cd #{directory}; #{rake} MERB_ENV=#{merb_env} #{migrate_env} db:migrate"
  end
end
